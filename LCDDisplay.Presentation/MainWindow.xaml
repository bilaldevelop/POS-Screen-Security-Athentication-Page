<Window x:Class="LCDDisplay.Presentation.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:sys="clr-namespace:System;assembly=mscorlib"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:LCDDisplay.Presentation"
        xmlns:numric="clr-namespace:LCDDisplay.Controls;assembly=LCDDisplay.Controls"
        mc:Ignorable="d"
        Title="MainWindow" Height="850" Width="800"  >

    <Window.Resources>
        
        <Color x:Key="ColorElectronBlue">#0984e3</Color>
        <SolidColorBrush x:Key="SolidElectronBlue" Color="{StaticResource ColorElectronBlue}"></SolidColorBrush>
        <!--<sys:Double x:Key="BorderMargin">8</sys:Double>-->
        <Thickness x:Key="BorderMargin" Left="8" Top="8" Right="8" Bottom="8" />
        
        <Style x:Key="ButtonFocusVisual">
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate>
                        <Rectangle Margin="2" SnapsToDevicePixels="true" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" StrokeThickness="1" StrokeDashArray="1 2"/>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <LinearGradientBrush x:Key="ButtonNormalBackground" EndPoint="0,1" StartPoint="0,0">
            <GradientStop Color="#F3F3F3" Offset="0"/>
            <GradientStop Color="#EBEBEB" Offset="0.5"/>
            <GradientStop Color="#DDDDDD" Offset="0.5"/>
            <GradientStop Color="#CDCDCD" Offset="1"/>
        </LinearGradientBrush>
        <SolidColorBrush x:Key="ButtonNormalBorder" Color="#FF707070"/>
        <Style x:Key="ToggleButtonStyle1" TargetType="{x:Type ToggleButton}">
            <Setter Property="FocusVisualStyle" Value="{StaticResource ButtonFocusVisual}"/>
            <Setter Property="Background" Value="{StaticResource ButtonNormalBackground}"/>
            <Setter Property="BorderBrush" Value="{StaticResource ButtonNormalBorder}"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Padding" Value="1"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ToggleButton}">
                        <StackPanel Orientation="Horizontal">
                            <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                            <Border x:Name="on" Width="25" Height="25" Background="LightGray" CornerRadius="2,0,0,4" Margin="10,0,0,0">
                                <TextBlock x:Name="onText" Text="On" HorizontalAlignment="Center" VerticalAlignment="Center"/>
                            </Border>
                            <Border x:Name="off" Width="25" Height="25" Background="LightGray" CornerRadius="0,2,4,0">
                                <TextBlock x:Name="offText" Text="Off" HorizontalAlignment="Center" VerticalAlignment="Center"/>
                            </Border>
                        </StackPanel>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Foreground" Value="#ADADAD"/>
                            </Trigger>
                            <Trigger Property="IsChecked" Value="true">
                                <Setter TargetName="on" Property="Background" Value="LightBlue"/>
                                <Setter TargetName="onText" Property="Foreground" Value="White"/>
                            </Trigger>
                            <Trigger Property="IsChecked" Value="False">
                                <Setter TargetName="off" Property="Background" Value="LightBlue"/>
                                <Setter TargetName="offText" Property="Foreground" Value="White"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="NumericButtonStyle" TargetType="{x:Type ButtonBase}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate   TargetType="{x:Type ButtonBase}" >
                        <ControlTemplate.Resources>
                            <Color x:Key="ColorMouseOverEnterNumricBack">#FF424141</Color>
                            <Color x:Key="ColorPressedEnterNumricBack">#FFD8D8D8</Color>
                            <Color x:Key="ColorPressedEnterNumricBorder">#FFB8B8B8</Color>
                            <SolidColorBrush x:Key="SolidNumricBack" Color="#FFB8B8B8"/>

                            <Style TargetType="TextBlock">
                                <Setter Property="HorizontalAlignment" Value="Left"/>
                                <Setter Property="Foreground" Value="#FF919191"></Setter>
                            </Style>
                            <Duration x:Key="EnterDuration" >0:0:0.1</Duration>
                            <Duration x:Key="LeaveDuration">0:0:0.5</Duration>
 
                            <!--<Storyboard x:Key="storyIsMouseOverEnter">
                                <ColorAnimation   To="{StaticResource ColorNumricBack}"  Storyboard.TargetName="back"  Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)"   Duration="{StaticResource EnterDuration}"/>
                                <ThicknessAnimation    To="10"  Storyboard.TargetName="back"  Storyboard.TargetProperty="Padding" Duration="{StaticResource EnterDuration}"></ThicknessAnimation>
                                <DoubleAnimation To="100"  Storyboard.TargetName="back" Storyboard.TargetProperty="(Border.Effect).(DropShadowEffect.BlurRadius)" Duration="{StaticResource EnterDuration}"></DoubleAnimation>
                                <DoubleAnimation  To="15"  Storyboard.TargetName="back" Storyboard.TargetProperty="(Border.Effect).(DropShadowEffect.ShadowDepth)" Duration="{StaticResource EnterDuration}"></DoubleAnimation>
                                <ColorAnimation To="Black" Storyboard.TargetName="TextBlockItem" Storyboard.TargetProperty="(TextElement.Foreground).(SolidColorBrush.Color)" Duration="{StaticResource EnterDuration}" ></ColorAnimation>
                            </Storyboard>-->

                            <Storyboard x:Key="storyIsMouseOverEnter">
                                <ColorAnimation   To="{StaticResource ColorMouseOverEnterNumricBack}"  Storyboard.TargetName="back"  Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)"   Duration="{StaticResource EnterDuration}"/>
                                <ThicknessAnimation    To="10"  Storyboard.TargetName="back"  Storyboard.TargetProperty="Padding" Duration="{StaticResource EnterDuration}"></ThicknessAnimation>

                                <ColorAnimation To="Black" Storyboard.TargetName="TextBlockItem" Storyboard.TargetProperty="(TextElement.Foreground).(SolidColorBrush.Color)" Duration="{StaticResource EnterDuration}" ></ColorAnimation>
                            </Storyboard>
                            
                            <Storyboard x:Key="storyIsMouseOverExit">
                                <ColorAnimation    Storyboard.TargetName="back"  Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)" Duration="{StaticResource LeaveDuration}"/>
                                <ThicknessAnimation    Storyboard.TargetName="back"  Storyboard.TargetProperty="Padding" Duration="{StaticResource LeaveDuration}"></ThicknessAnimation>
                                <DoubleAnimation    Storyboard.TargetName="back" Storyboard.TargetProperty="(Border.Effect).(DropShadowEffect.BlurRadius)" Duration="{StaticResource LeaveDuration}"></DoubleAnimation>
                                <DoubleAnimation   Storyboard.TargetName="back" Storyboard.TargetProperty="(Border.Effect).(DropShadowEffect.ShadowDepth)" Duration="{StaticResource LeaveDuration}"></DoubleAnimation>
                                <ColorAnimation   Storyboard.TargetName="TextBlockItem"  Storyboard.TargetProperty="(TextElement.Foreground).(SolidColorBrush.Color)" Duration="{StaticResource LeaveDuration}" ></ColorAnimation>

                            </Storyboard>

                            <Storyboard x:Key="storyIsPressedEnter">
                                <ColorAnimation  To="{StaticResource ColorPressedEnterNumricBack}"  Storyboard.TargetName="back"  Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)"    Duration="{StaticResource EnterDuration}"/>
                                <!--<ColorAnimation  To="{StaticResource ColorPressedEnterNumricBorder}"  Storyboard.TargetName="back"  Storyboard.TargetProperty="(Border.BorderBrush).(SolidColorBrush.Color)"    Duration="{StaticResource EnterDuration}"/>-->
                                <ThicknessAnimation  To="10" Storyboard.TargetName="back"  Storyboard.TargetProperty="Padding"   Duration="{StaticResource EnterDuration}"></ThicknessAnimation>
                                <DoubleAnimation  To="100" Storyboard.TargetName="back" Storyboard.TargetProperty="(Border.Effect).(DropShadowEffect.BlurRadius)" Duration="{StaticResource EnterDuration}"></DoubleAnimation>
                                <DoubleAnimation  To="15" Storyboard.TargetName="back" Storyboard.TargetProperty="(Border.Effect).(DropShadowEffect.ShadowDepth)" Duration="{StaticResource EnterDuration}"></DoubleAnimation>
                                <DoubleAnimation  To="1" Storyboard.TargetName="back" Storyboard.TargetProperty="(Border.Effect).(DropShadowEffect.Opacity)" Duration="{StaticResource EnterDuration}"></DoubleAnimation>
                                <ColorAnimation To="Black" Storyboard.TargetName="TextBlockItem" Storyboard.TargetProperty="(TextElement.Foreground).(SolidColorBrush.Color)" Duration="{StaticResource EnterDuration}" ></ColorAnimation>
                            </Storyboard>
                            <Storyboard x:Key="storyIsPressedExit">
                                <ColorAnimation    Storyboard.TargetName="back"  Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)"    Duration="{StaticResource LeaveDuration}"/>
                                <ThicknessAnimation   Storyboard.TargetName="back"  Storyboard.TargetProperty="Padding"   Duration="{StaticResource LeaveDuration}"></ThicknessAnimation>
                                <DoubleAnimation  Storyboard.TargetName="back" Storyboard.TargetProperty="(Border.Effect).(DropShadowEffect.BlurRadius)" Duration="{StaticResource LeaveDuration}"></DoubleAnimation>
                                <DoubleAnimation   Storyboard.TargetName="back" Storyboard.TargetProperty="(Border.Effect).(DropShadowEffect.ShadowDepth)" Duration="{StaticResource LeaveDuration}"></DoubleAnimation>
                                <DoubleAnimation  To="0" Storyboard.TargetName="back" Storyboard.TargetProperty="(Border.Effect).(DropShadowEffect.Opacity)" Duration="{StaticResource EnterDuration}"></DoubleAnimation>
                                <ColorAnimation   Storyboard.TargetName="TextBlockItem" Storyboard.TargetProperty="(TextElement.Foreground).(SolidColorBrush.Color)" Duration="{StaticResource LeaveDuration}" ></ColorAnimation>
                            </Storyboard>

                            <Storyboard x:Key="storyIsEnabledEnter">
                                <ColorAnimation  To="White"  Storyboard.TargetName="back"  Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)"    Duration="{StaticResource EnterDuration}"/>
                                <ThicknessAnimation  To="10" Storyboard.TargetName="back"  Storyboard.TargetProperty="Padding"   Duration="{StaticResource EnterDuration}"></ThicknessAnimation>
                                <DoubleAnimation  To="50" Storyboard.TargetName="back" Storyboard.TargetProperty="(Border.Effect).(DropShadowEffect.BlurRadius)" Duration="{StaticResource EnterDuration}"></DoubleAnimation>
                                <DoubleAnimation  To="15" Storyboard.TargetName="back" Storyboard.TargetProperty="(Border.Effect).(DropShadowEffect.ShadowDepth)" Duration="{StaticResource EnterDuration}"></DoubleAnimation>
                                <ColorAnimation   To="#FFE9E5FF"  Storyboard.TargetName="back" Storyboard.TargetProperty="(Border.Effect).(DropShadowEffect.Color)" Duration="{StaticResource EnterDuration}"></ColorAnimation>
                                <ColorAnimation To="Black" Storyboard.TargetName="TextBlockItem" Storyboard.TargetProperty="(TextElement.Foreground).(SolidColorBrush.Color)" Duration="{StaticResource EnterDuration}" ></ColorAnimation>
                            </Storyboard>
                            <Storyboard x:Key="storyIsEnabledExit">
                                <ColorAnimation    Storyboard.TargetName="back"  Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)"    Duration="{StaticResource EnterDuration}"/>
                                <ThicknessAnimation   Storyboard.TargetName="back"  Storyboard.TargetProperty="Padding"   Duration="{StaticResource EnterDuration}"></ThicknessAnimation>
                                <DoubleAnimation  Storyboard.TargetName="back" Storyboard.TargetProperty="(Border.Effect).(DropShadowEffect.BlurRadius)" Duration="{StaticResource LeaveDuration}"></DoubleAnimation>
                                <DoubleAnimation   Storyboard.TargetName="back" Storyboard.TargetProperty="(Border.Effect).(DropShadowEffect.ShadowDepth)" Duration="{StaticResource LeaveDuration}"></DoubleAnimation>
                                <ColorAnimation   Storyboard.TargetName="TextBlockItem" Storyboard.TargetProperty="(TextElement.Foreground).(SolidColorBrush.Color)" Duration="{StaticResource LeaveDuration}" ></ColorAnimation>
                            </Storyboard>

                        </ControlTemplate.Resources>


                        <Border  x:Name="back"  Padding="7"  HorizontalAlignment="Stretch"  CornerRadius="15" BorderThickness="1"  BorderBrush="#FF807A7A">
                            <Border.Background>
                                <SolidColorBrush Color="#FF1F271D"></SolidColorBrush>
                            </Border.Background>
                            <Border.Effect>
                                <DropShadowEffect BlurRadius="0" Color="#FFE9E5FF" ShadowDepth="0" Opacity="0" Direction="225"/>
                            </Border.Effect>

                            <Border Name="fore"   HorizontalAlignment="Stretch"  CornerRadius="7"  >
                                <Grid  >
                                    <!--<Ellipse Width="15" Height="15" Stroke="#FFCFB9FF" StrokeThickness="4" HorizontalAlignment="Left" Fill="White" />-->
                                    <TextBlock x:Name="TextBlockItem" FontSize="40" HorizontalAlignment="Center" VerticalAlignment="Center"  Text="{TemplateBinding Content}">
                                    </TextBlock>
                                </Grid>
                            </Border>

                        </Border>
                        <ControlTemplate.Triggers>

                         
                            <Trigger Property="IsMouseOver" Value="True">

                                <Trigger.EnterActions>
                                    <BeginStoryboard Storyboard="{StaticResource storyIsMouseOverEnter}"></BeginStoryboard>
                                </Trigger.EnterActions>
                                <Trigger.ExitActions>
                                    <BeginStoryboard Storyboard="{StaticResource storyIsMouseOverExit}"></BeginStoryboard>
                                </Trigger.ExitActions>
                            </Trigger>

                            <Trigger Property="IsPressed" Value="True">

                                <Trigger.EnterActions>
                                    <BeginStoryboard Storyboard="{StaticResource storyIsPressedEnter}">
                                    </BeginStoryboard>
                                </Trigger.EnterActions>
                                <Trigger.ExitActions>
                                    <BeginStoryboard Storyboard="{StaticResource storyIsPressedExit}">
                                    </BeginStoryboard>
                                </Trigger.ExitActions>
                            </Trigger>

                            <Trigger Property="IsEnabled" Value="False">
                                <Setter Property="Foreground" Value="Yellow"></Setter>
                                <Trigger.EnterActions>
                                    <BeginStoryboard Storyboard="{StaticResource storyIsEnabledEnter}">
                                    </BeginStoryboard>
                                </Trigger.EnterActions>
                                <Trigger.ExitActions>
                                    <BeginStoryboard Storyboard="{StaticResource storyIsEnabledExit}">
                                    </BeginStoryboard>
                                </Trigger.ExitActions>
                            </Trigger>


                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <EventTrigger RoutedEvent="PreviewMouseDown">
                    <SoundPlayerAction Source="/Assets/Sounds/beep2.wav" />
                </EventTrigger>
            </Style.Triggers>
        </Style>
    </Window.Resources>
    <Grid>
        <Border Background="Black">
            <Grid>
                <Grid.RowDefinitions>
                    <RowDefinition Height="200"></RowDefinition>
                    <RowDefinition Height="*"></RowDefinition>
                </Grid.RowDefinitions>

                <Border Grid.Row="0" Margin="10" BorderThickness="0" BorderBrush="Blue" CornerRadius="7"  Background="#FF080808">
                    <StackPanel  Orientation="Horizontal" HorizontalAlignment="Center">

                        <numric:UserControl1 Name="numberOne" Width="100" ></numric:UserControl1>
                        <numric:UserControl1 Name="numberTwo"  Width="100" ></numric:UserControl1>
                        <numric:UserControl1 Name="numberThree" Width="100" ></numric:UserControl1>
                        <numric:UserControl1 Name="numberFour"  Width="100" ></numric:UserControl1>

                    </StackPanel>
                </Border>

                <StackPanel Grid.Row="1">
                   

                    <Border HorizontalAlignment="Center" Margin="0,50,0,0" Padding="60"  CornerRadius="20" Background="#FF0E0E0E" >
                    <Grid >
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="120"></ColumnDefinition>
                                <ColumnDefinition Width="120"></ColumnDefinition>
                                <ColumnDefinition Width="120"></ColumnDefinition>
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                                <RowDefinition Height="120"></RowDefinition>
                                <RowDefinition Height="120"></RowDefinition>
                                <RowDefinition Height="120"></RowDefinition>
                                <RowDefinition Height="120"></RowDefinition>
                            </Grid.RowDefinitions>
                            <Border Grid.Column="0" Grid.Row="0" Margin="{StaticResource BorderMargin}">
                                <Button  Name="Numric_1"  Style="{StaticResource NumericButtonStyle}" Foreground="White"  Click="Numric_Click" >1</Button>
                            </Border>
                            <Border Grid.Column="1" Grid.Row="0" Margin="{StaticResource BorderMargin}">
                                <Button  Name="Numric_2"  Style="{StaticResource NumericButtonStyle}"  Click="Numric_Click" >2</Button>
                            </Border>
                            <Border Grid.Column="2" Grid.Row="0"  Margin="{StaticResource BorderMargin}">
                                <Button  Name="Numric_3"  Style="{StaticResource NumericButtonStyle}"  Click="Numric_Click" >3</Button>
                            </Border>
                            <Border  Grid.Column="0" Grid.Row="1"  Margin="{StaticResource BorderMargin}">
                                <Button  Name="Numric_4"  Style="{StaticResource NumericButtonStyle}"   Click="Numric_Click" >4</Button>
                            </Border>
                            <Border Grid.Column="1" Grid.Row="1"  Margin="{StaticResource BorderMargin}">
                                <Button  Name="Numric_5"  Style="{StaticResource NumericButtonStyle}"  Click="Numric_Click" >5</Button>
                            </Border>
                            <Border Grid.Column="2" Grid.Row="1"  Margin="{StaticResource BorderMargin}">
                                <Button  Name="Numric_6"  Style="{StaticResource NumericButtonStyle}"  Click="Numric_Click" >6</Button>
                            </Border>
                            <Border Grid.Column="0" Grid.Row="2"  Margin="{StaticResource BorderMargin}">
                                <Button  Name="Numric_7"  Style="{StaticResource NumericButtonStyle}"  Click="Numric_Click" >7</Button>
                            </Border>
                            <Border  Grid.Column="1" Grid.Row="2" Margin="{StaticResource BorderMargin}">
                                <Button  Name="Numric_8"  Style="{StaticResource NumericButtonStyle}"   Click="Numric_Click" >8</Button>
                            </Border>
                            <Border  Grid.Column="2" Grid.Row="2" Margin="{StaticResource BorderMargin}">
                                <Button  Name="Numric_9"  Style="{StaticResource NumericButtonStyle}"  Click="Numric_Click" >9</Button>
                            </Border>
                            <Border Grid.Column="0" Grid.Row="3"  Margin="{StaticResource BorderMargin}">
                                <Button  Name="Numric_c"  Style="{StaticResource NumericButtonStyle}"  Click="Numric_Click" >C</Button>
                            </Border>
                            <Border  Grid.Column="1" Grid.Row="3" Margin="{StaticResource BorderMargin}">
                                <Button  Name="Numric_0" Style="{StaticResource NumericButtonStyle}"   Click="Numric_Click" >0</Button>
                            </Border>
                            <Border  Grid.Column="2" Grid.Row="3" Margin="{StaticResource BorderMargin}">
                                <Button   Name="Numric_enter" Style="{StaticResource NumericButtonStyle}"  Click="Numric_Click" >►</Button>
                            </Border>
                        </Grid>
</Border>

                    <StackPanel>
                        <Label Name="timelabel" FontSize="40" Foreground="White"></Label>
                        <Label Name="timeSpanLabel" FontSize="40" Foreground="White"></Label>
                        <Label Name="timeDiff" FontSize="40" Foreground="White"></Label>
                        <Button Name="resetButton" Click="resetButton_Click">Reset</Button>
                        <ToggleButton  Content="ON LINE MODE"  Style="{StaticResource ToggleButtonStyle1}"/>
                   
                    <Canvas  HorizontalAlignment="Stretch" VerticalAlignment="Stretch" >
                        <Button  Width="100" Style="{StaticResource NumericButtonStyle}" Canvas.Left="136" Canvas.Top="0">1</Button>
                        <!-- The position of this rectangle is animated using 
         a key frame animation. -->
                        <Rectangle 
                                      Canvas.Top="20"
                                      Canvas.Left="10"
                                      Height="100"
                                      Width="100"
                                      Stroke="White"
                                      StrokeThickness="5">
                            <Rectangle.RenderTransform>
                                <TranslateTransform x:Name="AnimatedTranslateTransform" />
                            </Rectangle.RenderTransform>

                            <Rectangle.Triggers>
                                <EventTrigger RoutedEvent="Rectangle.Loaded">
                                    <BeginStoryboard>
                                        <Storyboard Name="storyboardRectangle">

                                            <!-- Animate the TranslateTransform.X property using 3 KeyFrames
                   which animates the rectangle along a straight line. 
                   This animation repeats indefinitely. -->
                                            <DoubleAnimationUsingKeyFrames
                                                        Storyboard.TargetName="AnimatedTranslateTransform"
                                                        Storyboard.TargetProperty="X"
                                                        Duration="0:0:9"
                                                        RepeatBehavior="Forever">

                                                <LinearDoubleKeyFrame Value="0" KeyTime="0:0:0"/>
                                                    <LinearDoubleKeyFrame Value="350" KeyTime="0:0:2"/>
                                                        <LinearDoubleKeyFrame Value="50" KeyTime="0:0:7"/>
                                                            <LinearDoubleKeyFrame Value="800" KeyTime="0:0:8.5"/>
                                                <LinearDoubleKeyFrame Value="0" KeyTime="0:0:9"/>
                                                
                                            </DoubleAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </BeginStoryboard>
                                </EventTrigger>
                            </Rectangle.Triggers>
                        </Rectangle>
                    </Canvas> 
                </StackPanel>
                </StackPanel>
            </Grid>

        </Border>
    </Grid>
</Window>
